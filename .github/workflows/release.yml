name: Release

on:
  push:
    tags:
      - 'v*'  # 當推送 v 開頭的標籤時觸發

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        arch: [amd64, arm64]
        exclude:
          # 排除 Linux arm64（如果需要）
          - os: ubuntu-latest
            arch: arm64
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 獲取完整的 git 歷史

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'

      - name: Get version from tag
        id: get_version
        run: |
          # 從標籤獲取版本號
          VERSION=${GITHUB_REF#refs/tags/}
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Build
        env:
          GOOS: ${{ matrix.os == 'ubuntu-latest' && 'linux' || 'darwin' }}
          GOARCH: ${{ matrix.arch }}
        run: |
          BINARY_NAME="photo-sorter-${{ matrix.os == 'ubuntu-latest' && 'linux' || 'darwin' }}-${{ matrix.arch }}"
          go build -ldflags "-X photo-sorter/internal/pkg/version.Version=${{ env.VERSION }} \
            -X photo-sorter/internal/pkg/version.BuildTime=$(date +%Y-%m-%d_%H:%M:%S) \
            -X photo-sorter/internal/pkg/version.GitCommit=$(git rev-parse HEAD)" \
            -o $BINARY_NAME cmd/photo-sorter/main.go
          echo "BINARY_NAME=$BINARY_NAME" >> $GITHUB_ENV

      - name: Create release package
        run: |
          # 建立發布目錄
          RELEASE_DIR="photo-sorter-${{ env.VERSION }}-${{ matrix.os == 'ubuntu-latest' && 'linux' || 'darwin' }}-${{ matrix.arch }}"
          mkdir -p $RELEASE_DIR
          
          # 複製二進制檔案
          cp $BINARY_NAME $RELEASE_DIR/photo-sorter
          
          # 複製配置檔案
          cp config/config.yaml $RELEASE_DIR/
          
          # 建立壓縮檔
          if [ "${{ matrix.os }}" = "ubuntu-latest" ]; then
            tar czf $RELEASE_DIR.tar.gz $RELEASE_DIR
          else
            zip -r $RELEASE_DIR.zip $RELEASE_DIR
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: photo-sorter-${{ matrix.os == 'ubuntu-latest' && 'linux' || 'darwin' }}-${{ matrix.arch }}
          path: |
            photo-sorter-${{ env.VERSION }}-${{ matrix.os == 'ubuntu-latest' && 'linux' || 'darwin' }}-${{ matrix.arch }}.tar.gz
            photo-sorter-${{ env.VERSION }}-${{ matrix.os == 'ubuntu-latest' && 'linux' || 'darwin' }}-${{ matrix.arch }}.zip

  create-release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/photo-sorter-linux-amd64/photo-sorter-*-linux-amd64.tar.gz
            artifacts/photo-sorter-darwin-amd64/photo-sorter-*-darwin-amd64.zip
            artifacts/photo-sorter-darwin-arm64/photo-sorter-*-darwin-arm64.zip
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
